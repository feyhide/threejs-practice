{"id":"index.html","dependencies":[{"name":"./js\\scripts.js","dynamic":true,"resolved":"D:\\FullStack\\threejs\\modelmaterial-main\\src\\js\\scripts.js","parent":"D:\\FullStack\\threejs\\modelmaterial-main\\src\\index.html"},{"name":"_css_loader","parent":"D:\\FullStack\\threejs\\modelmaterial-main\\src\\index.html","resolved":"D:\\FullStack\\node_modules\\parcel-bundler\\src\\builtins\\css-loader.js"},{"name":"D:\\FullStack\\threejs\\modelmaterial-main\\package.json","includedInParent":true,"mtime":1709455754785}],"generated":{"html":"<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Find objects/materials in a glTF/glb files</title>\n    <style>body {\n            margin: 0\n        }</style>\n</head>\n<body>\n    <script src=\"/549b6b2bff82a0ad6730c0f1cd665a19.js\" type=\"module\"></script>\n    <!--\n        // Create an AnimationMixer, and get the list of AnimationClip instances\n    mixer = new THREE.AnimationMixer( model );\n    const clips = gltf.animations;\n\n    // Play a specific animation\n    // const clip = THREE.AnimationClip.findByName( clips, 'ArmatureAction.001' );\n    // const action = mixer.clipAction( clip );\n    // action.play();\n\n    // Play all animations\n    clips.forEach( function ( clip ) {\n        mixer.clipAction( clip ).play();\n    } );\n\n    const clock = new THREE.Clock();\n    if(mixer) \n        mixer.update(clock.getDelta());\n    -->\n</body>\n</html>"},"sourceMaps":null,"error":null,"hash":"53617340ef7caf142f7363ab02530f83","cacheData":{"env":{}}}